
/* Question 1: Write a program to print the size of different
data types in C (int, float, double, char, etc.).*/

/*
#include <stdio.h>
int main(){
    
    printf("Size of int: %lu bytes\n",sizeof(int));
    printf("Size of float: %lu bytes\n",sizeof(float));
    printf("Size of double: %lu bytes\n",sizeof(double));
    printf("Size of char: %lu bytes\n",sizeof(char));
    
    return 0;
}

*/

/* Q.2 Write a program to read two numbers from the user
and print the sum, difference, product, and quotient of the two numbers. */

/*
#include <stdio.h>

int main() {
    // Declare variables
    float num1, num2, sum, difference, product, quotient;

    // Get input from the user
    printf("Enter the first number: ");
    scanf("%f", &num1);

    printf("Enter the second number: ");
    scanf("%f", &num2);

    // Calculate results
    sum = num1 + num2;
    difference = num1 - num2;
    product = num1 * num2;

    // Check for division by zero
    if (num2 != 0) {
        quotient = num1 / num2;
        printf("Sum: %.2f, Difference: %.2f, Product: %.2f, Quotient: %.2f\n", sum, difference, product, quotient);
    } else {
        printf("Error: Division by zero\n");
    }

    return 0;
}

*/

/* Q.3 Write a program to find the largest and smallest number
among three numbers entered by the user. */

/*

#include <stdio.h>

int main() {
    float num1, num2, num3;

    printf("Enter three numbers: ");
    scanf("%f %f %f", &num1, &num2, &num3);

    float largest = (num1 > num2) ? (num1 > num3 ? num1 : num3) : (num2 > num3 ? num2 : num3);
    float smallest = (num1 < num2) ? (num1 < num3 ? num1 : num3) : (num2 < num3 ? num2 : num3);

    printf("Largest: %.2f\n", largest);
    printf("Smallest: %.2f\n", smallest);

    return 0;
}

*/

//  Q.4 Write a program to print all even numbers from 1 to 100. 

/*

#include <stdio.h>

int main(){
    printf("Even numbers from 1 to 100:\n");

    for (int i = 2; i <= 100; i += 2) {
        printf("%d\n", i);
    }

    return 0;
}
 
 
 */
 
// Q.5 Write a function to calculate the area of a triangle

/*

  #include <stdio.h>

// Function to calculate the area of a triangle
float calculateTriangleArea(float base, float height) { // Function
    return 0.5 * base * height;                         // Function
}

int main() {
    // Input: base and height of the triangle
    float base, height;

    printf("Enter the base of the triangle: ");
    scanf("%f", &base);

    printf("Enter the height of the triangle: ");
    scanf("%f", &height);

    // Calculate the area using the function
    float area = calculateTriangleArea(base, height);

    // Display the result
    printf("The area of the triangle is: %.2f\n", area);

    return 0;
}   
  
*/
  
 // Q.6 Write a function to calculate the volume of a sphere.
  
/*  
  
#include <stdio.h>
#include <math.h>

// Function to calculate the volume of a sphere
float calculateSphereVolume(float radius) {
    return (4.0 / 3.0) * M_PI * pow(radius, 3);
}

int main() {
    // Input: radius of the sphere
    float radius;

    printf("Enter the radius of the sphere: ");
    scanf("%f", &radius);

    // Calculate the volume using the function
    float volume = calculateSphereVolume(radius);

    // Display the result
    printf("The volume of the sphere is: %.2f\n", volume);

    return 0;
}
  
 */ 
  
// Q.7 Write a function to find the greatest common divisor (GCD) of two numbers. 

/*

#include <stdio.h>

// Function to find the GCD using the Euclidean algorithm
int findGCD(int num1, int num2) {
    while (num2 != 0) {
        int temp = num2;
        num2 = num1 % num2;
        num1 = temp;
    }
    return num1;
}

int main() {
    // Input: two numbers
    int num1, num2;

    printf("Enter the first number: ");
    scanf("%d", &num1);

    printf("Enter the second number: ");
    scanf("%d", &num2);

    // Calculate and display the GCD using the function
    printf("The GCD of %d and %d is: %d\n", num1, num2, findGCD(num1, num2));

    return 0;
}
  
 */ 
  
// Q.8 Write a function to find the least common multiple (LCM) of two numbers.  
  
/* 
  
#include <stdio.h>

// Function to find the greatest common divisor (GCD)
int find_gcd(int a, int b) {
    while (b != 0) {
        int temp = b;
        b = a % b;
        a = temp;
    }
    return 1;
}

// Function to find the least common multiple (LCM)
int find_lcm(int x, int y) {
    return (x * y) / find_gcd(x, y);
}

int main() {
    int num1 = 12, num2 = 18;
    int lcm = find_lcm(num1, num2);
    printf("The LCM of %d and %d is: %d\n", num1, num2, lcm);
    
    return 0;
}
  
*/  
  
// Q.9 Write a program to check whether a number is positive, negative, or zero.  

/*

#include <stdio.h>

int main() {
    // Declare a variable to store the number
    int number;

    // Read the number from the user
    printf("Enter a number: ");
    scanf("%d", &number);

    // Check if the number is positive, negative, or zero
    if (number > 0) {
        printf("The number is positive.\n");
    } else if (number < 0) {
        printf("The number is negative.\n");
    } else {
        printf("The number is zero.\n");
    }

    return 0;
}

*/

// Q.10 Write a program to check whether a number is even or odd.

/*

#include <stdio.h>

int main() {
    // Declare a variable to store the number
    int number;

    // Read the number from the user
    printf("Enter a number: ");
    scanf("%d", &number);

    // Check if the number is even or odd
    if (number % 2 == 0) {
        printf("The number is even.\n");
    } else {
        printf("The number is odd.\n");
    }

    return 0;
}

*/

/*  Q. 11 Write a program to check whether a triangle is isosceles,
equilateral, or scalene. */

/*

#include <stdio.h>

int main() {
    double side1, side2, side3;

    printf("Enter three sides of the triangle: ");
    scanf("%lf %lf %lf", &side1, &side2, &side3);

    if (side1 == side2 && side2 == side3) {
        printf("Equilateral triangle.\n");
    } else if (side1 == side2 || side1 == side3 || side2 == side3) {
        printf("Isosceles triangle.\n");
    } else {
        printf("Scalene triangle.\n");
    }

    return 0;
}

*/

// Q.12 Write a program to print all even numbers from 1 to 100 using a for loop.

/*

#include <stdio.h>

int main() {
    printf("Even numbers from 1 to 100:\n");

    // Using a for loop to iterate from 1 to 100
    for (int i = 2; i <= 100; i += 2) {
        printf("%d\n", i);
    }

    return 0;
}

*/



// Q.13 Write a program to print all odd numbers from 1 to 100 using a while loop. 

/*

#include <stdio.h>

int main() {
    printf("Odd numbers from 1 to 100:\n");

    // Using a while loop to iterate from 1 to 100
    int i = 1;
    while (i <= 100) {
        printf("%d\n", i);
        i += 2; // Increment by 2 to get the next odd number
    }

    return 0;
}

*/

// Q.14 Write a program to print all odd numbers from 1 to 100 using a do while loop.

/*

#include <stdio.h>

int main() {
    printf("Odd numbers from 1 to 100:\n");

    // Using a do-while loop to iterate from 1 to 100
    int i = 1;
    do {
        printf("%d\n", i);
        i += 2; // Increment by 2 to get the next odd number
    } while (i <= 100);

    return 0;
}

*/

// Q.15 Write a program to calculate the area and perimeter of a rectangle using arithmetic operators.

/*

#include <stdio.h>

int main() {
    // Declare variables for length and width
    double length, width;

    // Read length and width from the user
    printf("Enter the length of the rectangle: ");
    scanf("%lf", &length);
    printf("Enter the width of the rectangle: ");
    scanf("%lf", &width);

    // Calculate area and perimeter
    double area = length * width;
    double perimeter = 2 * (length + width);

    // Display the calculated values
    printf("Area of the rectangle: %.2lf\n", area);
    printf("Perimeter of the rectangle: %.2lf\n", perimeter);

    return 0;
}

*/

// Q. 16 Write a program to calculate the volume and surface area of a cube using arithmetic operators.

/*

#include <stdio.h>

int main() {
    // Input the side length of the cube
    float side_length;
    printf("Enter the side length of the cube: ");
    scanf("%f", &side_length);

    // Calculate and print the volume and surface area
    printf("Volume: %.2f\n", side_length * side_length * side_length);
    printf("Surface Area: %.2f\n", 6 * side_length * side_length);

    return 0;
}

*/

// Q.17 write a code to perform following operation properly 2/3 = 0.666

/*

#include <stdio.h>

int main() {
    // Perform the division with floating-point numbers
    float result = 2.0 / 3.0;

    // Print the result
    printf("Result: %.3f\n", result);

    return 0;
}

*/

// Q.18 write a code to perform following operation properly 2*1.2 = 2.4

/*

#include <stdio.h>

int main() {
    // Perform the multiplication
    float result = 2 * 1.2;

    // Print the result
    printf("Result: %.1f\n", result);

    return 0;
}

*/

// Q.19 Write a code to calculate area of given geometry.

/*

#include <stdio.h>

int main() {
    char choice;

    // Display options
    printf("Choose a geometry to calculate its area:\n");
    printf("1. Rectangle\n");
    printf("2. Circle\n");
    // Add more options as needed

    // Input choice
    printf("Enter your choice (1/2): ");
    scanf(" %c", &choice);

    // Variable declarations
    float area;

    // Perform calculations based on choice
    switch (choice) {
        case '1':
            // Area of Rectangle
            {
                float length, width;
                printf("Enter the length of the rectangle: ");
                scanf("%f", &length);
                printf("Enter the width of the rectangle: ");
                scanf("%f", &width);
                area = length * width;
            }
            break;

        case '2':
            // Area of Circle
            {
                float radius;
                printf("Enter the radius of the circle: ");
                scanf("%f", &radius);
                area = 3.14 * radius * radius; // Using an approximation of pi
            }
            break;

        // Add more cases for other geometries as needed

        default:
            printf("Invalid choice\n");
            return 1;
    }

    // Print the result
    printf("Area: %.2f\n", area);

    return 0;
}    

*/

// Q.20 Write a programme to accept any integer number and print table of the same integer.

/*

#include <stdio.h>

int main() {
    // Input an integer
    int number;

    printf("Enter an integer: ");
    scanf("%d", &number);

    // Print the multiplication table
    printf("Multiplication table of %d:\n", number);
    for (int i = 1; i <= 10; ++i) {
        printf("%d * %d = %d\n", number, i, number * i);
    }

    return 0;
}

*/

// Q.21 Write a programme to develop calculator for any arithmetic calculations.

/*

#include <stdio.h>

int main() {
    char operator;
    float num1, num2, result;

    // Input operator and operands
    printf("Enter an operator (+, -, *, /): ");
    scanf(" %c", &operator);

    printf("Enter two numbers: ");
    scanf("%f %f", &num1, &num2);

    // Perform calculation based on operator
    switch (operator) {
        case '+':
            result = num1 + num2;
            break;
        case '-':
            result = num1 - num2;
            break;
        case '*':
            result = num1 * num2;
            break;
        case '/':
            // Check for division by zero
            if (num2 != 0) {
                result = num1 / num2;
            } else {
                printf("Error: Division by zero.\n");
                return 1;
            }
            break;
        default:
            printf("Error: Invalid operator.\n");
            return 1;
    }

    // Print the result
    printf("Result: %.2f\n", result);

    return 0;
}

*/

/* Q.22 Write a programme to accept birth year of person 
and print output as a eligibility for voting in the year 2024. */ 

/*

#include <stdio.h>

int main() {
    int birthYear, currentYear = 2024;
    int votingAge = 18;

    // Input birth year
    printf("Enter your birth year: ");
    scanf("%d", &birthYear);

    // Calculate age
    int age = currentYear - birthYear;

    // Check eligibility for voting
    if (age >= votingAge) {
        printf("You are eligible to vote in the year 2024.\n");
    } else {
        printf("You are not eligible to vote in the year 2024.\n");
    }

    return 0;
}

*/

/* Q.23 Write a programme to accept marks of five subjects out of 100 
each and decide the class of that student as FAIL,SECOND CLASS,FIRST CLASS,
DISTINCTION etc. */

/*

#include <stdio.h>

int main() {
    int marks[5];
    float average;
    
    // Input marks for five subjects
    printf("Enter marks for five subjects (out of 100):\n");
    for (int i = 0; i < 5; ++i) {
        printf("Subject %d: ", i + 1);
        scanf("%d", &marks[i]);
    }

    // Calculate average
    average = (marks[0] + marks[1] + marks[2] + marks[3] + marks[4]) / 5.0;

    // Decide the class based on average marks
    if (average >= 90) {
        printf("Class: Distinction\n");
    } else if (average >= 80) {
        printf("Class: First Class\n");
    } else if (average >= 60) {
        printf("Class: Second Class\n");
    } else if (average >= 40) {
        printf("Class: Pass\n");
    } else {
        printf("Class: Fail\n");
    }

    return 0;
}

*/

/* Q.24 Write a C program to demonstrate basic arithmetic operations
of  numbers of different data types. */

/*

#include <stdio.h>

int main() {
    // Integer arithmetic
    int integer1 = 10, integer2 = 5;
    int sum_int = integer1 + integer2;
    int difference_int = integer1 - integer2;
    int product_int = integer1 * integer2;
    int quotient_int = integer1 / integer2;

    // Floating-point arithmetic
    float float1 = 10.5, float2 = 2.5;
    float sum_float = float1 + float2;
    float difference_float = float1 - float2;
    float product_float = float1 * float2;
    float quotient_float = float1 / float2;

    // Display results
    printf("Integer Arithmetic:\n");
    printf("Sum: %d\n", sum_int);
    printf("Difference: %d\n", difference_int);
    printf("Product: %d\n", product_int);
    printf("Quotient: %d\n", quotient_int);

    printf("\nFloating-point Arithmetic:\n");
    printf("Sum: %.2f\n", sum_float);
    printf("Difference: %.2f\n", difference_float);
    printf("Product: %.2f\n", product_float);
    printf("Quotient: %.2f\n", quotient_float);

    return 0;
}

*/

/* Q.25 Write a C program to compute the roots of a quadratic 
equation  (operators and expressions). */

/*

#include <stdio.h>
#include <math.h>

int main() {
    float a, b, c;
    float discriminant, root1, root2;

    // Input coefficients
    printf("Enter coefficients (a, b, c) of the quadratic equation: ");
    scanf("%f %f %f", &a, &b, &c);

    // Calculate discriminant
    discriminant = b * b - 4 * a * c;

    // Check the nature of roots
    if (discriminant > 0) {
        // Two distinct real roots
        root1 = (-b + sqrt(discriminant)) / (2 * a);
        root2 = (-b - sqrt(discriminant)) / (2 * a);
        printf("Roots are real and distinct:\n");
        printf("Root 1: %.2f\n", root1);
        printf("Root 2: %.2f\n", root2);
    } else if (discriminant == 0) {
        // One real root (both roots are the same)
        root1 = -b / (2 * a);
        printf("Roots are real and identical:\n");
        printf("Root: %.2f\n", root1);
    } else {
        // Complex roots
        float realPart = -b / (2 * a);
        float imaginaryPart = sqrt(fabs(discriminant)) / (2 * a);
        printf("Roots are complex conjugates:\n");
        printf("Root 1: %.2f + %.2fi\n", realPart, imaginaryPart);
        printf("Root 2: %.2f - %.2fi\n", realPart, imaginaryPart);
    }

    return 0;
}

*/

/* Q.26 Write a C program to accept the length of three sides of a
triangle and to test and print the type of triangle as equilateral, 
isosceles or right angled or none (if-else). */

/*

#include <stdio.h>

int main() {
    float side1, side2, side3;

    // Input sides of the triangle
    printf("Enter the length of three sides of the triangle: ");
    scanf("%f %f %f", &side1, &side2, &side3);

    // Check and print the type of triangle
    if (side1 == side2 && side2 == side3) {
        printf("Type: Equilateral Triangle\n");
    } else if (side1 == side2 || side2 == side3 || side1 == side3) {
        printf("Type: Isosceles Triangle\n");
    } else if (side1*side1 + side2*side2 == side3*side3 ||
    side1*side1 + side3*side3 == side2*side2 ||
    side2*side2 + side3*side3 == side1*side1) {
        printf("Type: Right-Angled Triangle\n");
    } else {
        printf("Type: None of the specified types\n");
    }

    return 0;
}

*/

// Q.27 Write a C Program to find GCD and LCM of given two numbers

/*

#include <stdio.h>

// Function to find GCD of two numbers using Euclidean Algorithm
int findGCD(int a, int b) {
    while (b != 0) {
        int temp = b;
        b = a % b;
        a = temp;
    }
    return a;
}

// Function to find LCM of two numbers using GCD
int findLCM(int a, int b) {
    int gcd = findGCD(a, b);
    int lcm = (a * b) / gcd;
    return lcm;
}

int main() {
    int num1, num2;

    // Input two numbers
    printf("Enter two numbers: ");
    scanf("%d %d", &num1, &num2);

    // Find and print GCD and LCM
    printf("GCD of %d and %d is: %d\n", num1, num2, findGCD(num1, num2));
    printf("LCM of %d and %d is: %d\n", num1, num2, findLCM(num1, num2));

    return 0;
}

*/

/* Q.28 Write a C Program to accept N numbers from user using
any loop and display the average of the same. */

/*

#include <stdio.h>

int main() {
    int N;
    float sum = 0.0;

    // Input the number of elements
    printf("Enter the number of elements (N): ");
    scanf("%d", &N);

    // Input N numbers and calculate sum
    for (int i = 1; i <= N; ++i) {
        float num;
        printf("Enter number %d: ", i);
        scanf("%f", &num);
        sum += num;
    }

    // Calculate and display average
    if (N > 0) {
        float average = sum / N;
        printf("Average of the %d numbers: %.2f\n", N, average);
    } else {
        printf("Cannot calculate average with zero elements.\n");
    }

    return 0;
}

*/

/* 
Q.29 Write a Program to print following pattern based on the number of rows.
e.g. Enter no. of rows : 6
0
01
012
0123
01234
012345

*/

/*

#include <stdio.h>

int main() {
    int rows;

    // Input the number of rows
    printf("Enter the number of rows: ");
    scanf("%d", &rows);

    // Print the pattern
    for (int i = 0; i < rows; ++i) {
        for (int j = 0; j <= i; ++j) {
            printf("%d", j);
        }
        printf("\n");
    }

    return 0;
}

*/

/* Q.30 Write a programme to accept any integer number and decide
whether it is odd or even number. */

/*

#include <stdio.h>

int main() {
    int number;

    // Input an integer
    printf("Enter an integer: ");
    scanf("%d", &number);

    // Check and print whether it's odd or even
    if (number % 2 == 0) {
        printf("%d is an even number.\n", number);
    } else {
        printf("%d is an odd number.\n", number);
    }

    return 0;
}

*/

/* Q.31 Write a programme to accept any integer number and decide 
whether it is completely divisible by 13. */

/*

#include <stdio.h>

int main() {
    int number;

    // Input an integer
    printf("Enter an integer: ");
    scanf("%d", &number);

    // Check and print whether it's divisible by 13
    if (number % 13 == 0) {
        printf("%d is completely divisible by 13.\n", number);
    } else {
        printf("%d is not completely divisible by 13.\n", number);
    }

    return 0;
}

*/

// Q.32 Write a code to print all even numbers from 1 to 100.

/*

#include <stdio.h>

int main() {
    // Print all even numbers from 1 to 100
    printf("Even numbers from 1 to 100:\n");
    for (int i = 2; i <= 100; i += 2) {
        printf("%d \n", i);
    }
    
    return 0;
}

*/

// Q.33 Write a code to print all odd numbers from 1 to 100.

/*

#include <stdio.h>

int main() {
    // Print all odd numbers from 1 to 100
    printf("Odd numbers from 1 to 100:\n");
    for (int i = 1; i <= 100; i += 2) {
        printf("%d \n", i);
    }

    return 0;
}

*/

/* Q.34	Write a code to accept attendance of 5 subjects in percentage and decide
whether the candidate is detained or not as per 75% attendance criteria. */

/*

#include <stdio.h>

int main() {
    float attendance[5];
    float totalAttendance = 0.0;
    int subjects = 5;
    float attendanceCriteria = 75.0;

    // Input attendance for each subject
    printf("Enter attendance percentage for each subject:\n");
    for (int i = 0; i < subjects; ++i) {
        printf("Subject %d: ", i + 1);
        scanf("%f", &attendance[i]);

        // Check if attendance is valid (between 0 and 100)
        if (attendance[i] < 0 || attendance[i] > 100) {
            printf("Invalid input for attendance percentage. Exiting...\n");
            return 1;  // Exit with an error code
        }

        totalAttendance += attendance[i];
    }

    // Calculate average attendance
    float averageAttendance = totalAttendance / subjects;

    // Check and print whether the candidate is detained
    if (averageAttendance < attendanceCriteria) {
        printf("The candidate is detained due to low attendance (average %.2f%%).\n", averageAttendance);
    } else {
        printf("The candidate is not detained (average %.2f%%).\n", averageAttendance);
    }

    return 0;
}

*/

// Q.35 Write a code to calculate area of given geometry.

/*

#include <stdio.h>

int main() {
    char choice;

    // Display options
    printf("Choose a geometry to calculate its area:\n");
    printf("1. Rectangle\n");
    printf("2. Circle\n");
    printf("3. Triangle\n");
    // Add more options as needed

    // Input choice
    printf("Enter your choice (1/2/3): ");
    scanf(" %c", &choice);

    // Variable declarations
    float area;

    // Perform calculations based on choice
    switch (choice) {
        case '1':
            // Area of Rectangle
            {
                float length, width;
                printf("Enter the length of the rectangle: ");
                scanf("%f", &length);
                printf("Enter the width of the rectangle: ");
                scanf("%f", &width);
                area = length * width;
            }
            break;

        case '2':
            // Area of Circle
            {
                float radius;
                printf("Enter the radius of the circle: ");
                scanf("%f", &radius);
                area = 3.14 * radius * radius; // Using an approximation of pi
            }
            break;

        case '3':
            // Area of Triangle
            {
                float base, height;
                printf("Enter the base of the triangle: ");
                scanf("%f", &base);
                printf("Enter the height of the triangle: ");
                scanf("%f", &height);
                area = 0.5 * base * height;
            }
            break;

        // Add more cases for other geometries as needed

        default:
            printf("Invalid choice\n");
            return 1;
    }

    // Print the result
    printf("Area: %.2f\n", area);

    return 0;
}

*/
